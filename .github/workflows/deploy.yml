name: Deploy Backend to Server

on:
  push:
    branches:
      - main
      - feature/deploy-ci

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven


    - name: Build with Maven
      run: |
        echo "Starting Maven build..."
        mvn clean package
        echo "Maven build completed"
        echo "Checking target directory:"
        ls -l target/

    - name: Deploy to server
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        BACKEND_PATH: ${{ secrets.BACKEND_PATH }}
        SUDO_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        # 确认工作目录和文件
        echo "Current directory: $PWD"
        echo "Checking for JAR file:"
        ls -l target/*.jar || echo "No JAR files found in target directory"
        
        # 测试基本连接
        echo "Testing SSH connection..."
        if ! sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "echo 'SSH connection successful'"; then
          echo "Failed to establish SSH connection"
          exit 1
        fi
        
        # 检查目录是否存在和权限
        echo "Checking backend directory..."
        if ! sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "[ -d $BACKEND_PATH ] && echo 'Directory exists' || echo 'Directory does not exist'"; then
          echo "Failed to check directory"
          exit 1
        fi
        
        # 检查目录权限
        echo "Checking directory permissions..."
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "ls -la $BACKEND_PATH"
        
        # 停止现有应用
        echo "Stopping existing application..."
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "ps aux | grep 'java -jar'"
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "pkill -f 'java -jar' || true"
        
        # 检查本地 JAR 文件
        echo "Checking local JAR file..."
        ls -l target/*.jar
        
        # 复制新的jar文件
        echo "Copying new jar file..."
        NEW_JAR_NAME=$(ls target/*.jar | xargs basename)
        echo "New JAR file name: $NEW_JAR_NAME"
        echo "Attempting to copy file to: $SERVER_USER@$SERVER_HOST:$BACKEND_PATH/$NEW_JAR_NAME"
        if ! sshpass -p "$SSH_PASSWORD" scp -v -o StrictHostKeyChecking=no target/*.jar $SERVER_USER@$SERVER_HOST:$BACKEND_PATH/$NEW_JAR_NAME; then
          echo "Failed to copy JAR file"
          exit 1
        fi
        
        # 验证文件复制
        echo "Verifying file copy..."
        if ! sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "ls -l $BACKEND_PATH/$NEW_JAR_NAME"; then
          echo "Failed to verify file copy"
          exit 1
        fi
        
        # 启动应用
        echo "Starting application..."
        if ! sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "cd $BACKEND_PATH && nohup java -jar $NEW_JAR_NAME --spring.profiles.active=prod > app.log 2>&1 &"; then
          echo "Failed to start application"
          exit 1
        fi
        
        # 验证应用启动
        echo "Verifying application startup..."
        sleep 5
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "ps aux | grep 'java -jar'"
        
        echo "Deployment completed successfully"